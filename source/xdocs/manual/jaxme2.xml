<?xml version="1.0" encoding="US-ASCII" standalone="no"?>
<!--

 Copyright 2004 The Apache Software Foundation.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

-->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                  "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
  <!ENTITY address SYSTEM "address.xml">
  <!ENTITY addressxsd SYSTEM "addressxsd.xml">
  <!ENTITY faq SYSTEM "faq.xml">
  <!ENTITY firststeps SYSTEM "firststeps.xml">
  <!ENTITY glossary SYSTEM "glossary.xml">
  <!ENTITY license SYSTEM "license.xml">
  <!ENTITY marshalling SYSTEM "marshalling.xml">
  <!ENTITY xjctask SYSTEM "xjctask.xml">
]>

<book>
<bookinfo>
  <title>The JaxMe 2 manual</title>
  <author><firstname>Jochen</firstname><surname>Wiedmann</surname></author>
  <copyright><year>2003-2004</year><holder>The Apache Software Foundation</holder></copyright>
</bookinfo>
<preface><title>Introduction</title>
<para>JaxMe 2 is a Java source generator. It is used as the base of XML
application frameworks. Using JaxMe can generate code that can:
<itemizedlist>
  <listitem>Convert XML documents into Java beans and back to XML documents again.</listitem>
  <listitem>Persist those Java beans into a datastore. It is recommended to use
    an XML database as a backend, but relational databases are supported
    through an object-relational mapper. (If your XML documents are
    sufficiently simple, that is ;) It is even possible to mix different
    database engines, depending on the document type.
    JaxMePM (the JaxMe persistence management framework) is design to be extensible.
    Developers can create new implementations to add support for datastores
    that JaxMe does not support out-of-the-box.
    </listitem>
  <listitem>Query the database for previously stored data and convert
    this data into Java beans.</listitem>
  <listitem>The database can be accessed directly or by EJB entity or
    session beans. These beans may be generated by JaxMe.</listitem>
</itemizedlist>
So, the complete workflow
of a typical application is supported: gathering, storing, processing,
and presenting data.</para>
<para>JaxMe is an open source project: You may redistribute sources, or
binaries, as you like. JaxMe comes to you under The Apache Software Foundation 
License, a very liberal license: you are even allowed to redistribute derived works
under a modified license. This is in contrast to the GPL, which requires
that derived works are GPL'ed again.</para>
</preface>

&firststeps;

<chapter><title>Reference</title>
<para>This chapter is more formal and can be assumed to be the JaxMe reference documentation.</para>

&xjctask;
&marshalling;
</chapter>

&license;
&faq;
&glossary;

</book>
